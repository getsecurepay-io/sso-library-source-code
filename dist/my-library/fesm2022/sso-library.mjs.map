{"version":3,"file":"sso-library.mjs","sources":["../../../projects/my-library/src/lib/cookie.service.ts","../../../projects/my-library/src/lib/my-library.service.ts","../../../projects/my-library/src/lib/my-library.component.ts","../../../projects/my-library/src/lib/interceptors/error.interceptor.ts","../../../projects/my-library/src/lib/interceptors/token.interceptor.ts","../../../projects/my-library/src/lib/my-library.module.ts","../../../projects/my-library/src/public-api.ts","../../../projects/my-library/src/sso-library.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CookieService {\n  COOKIE_NAME = 'accessToken';\n\n  set(name: string, value: string, days?: number): void {\n    var expires = '';\n    if (days) {\n      var date = new Date();\n      date.setTime(date.getTime() + days * 1000);\n      expires = '; expires=' + date.toUTCString();\n    }\n    document.cookie = name + '=' + (value || '') + expires + '; path=/';\n  }\n\n  get(name: string): string | null {\n    var nameEQ = name + '=';\n    var ca = document.cookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  }\n\n  remove(name: string) {\n    this.set(name, '', -10000000000);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from './cookie.service';\nimport { AppParams, HttpResponse, LoginData } from './model';\nimport { Observable, Subject } from 'rxjs';\n// import { environment } from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MyLibraryService {\n  baseAPI = '';\n  // baseAPI = 'https://secureauth.secureid-digital.com.ng/api';\n  // private baseAPI = environment.baseAPI;\n  private signUpSubject = new Subject();\n  private loginSubject = new Subject();\n  private appSetupSubject = new Subject();\n  private verifyEmailSubject = new Subject();\n  private sendOTPSubject = new Subject<boolean>();\n  private validateOTPSubject = new Subject();\n  private forgotPasswordSubject = new Subject<boolean>();\n  private resetPasswordSubject = new Subject<any>();\n  private queryObject: any;\n\n  emailValidationRegex = /([-!#-'*+/-9=?A-Z^-~]+(\\.[-!#-'*+/-9=?A-Z^-~]+)*|\"([]!#-[^-~ \\t]|(\\\\[\\t -~]))+\")@[0-9A-Za-z]([0-9A-Za-z-]{0,61}[0-9A-Za-z])?(\\.[0-9A-Za-z]([0-9A-Za-z-]{0,61}[0-9A-Za-z])?)+/\n  passwordValidationRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~])[A-Za-z\\d`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]{8,100000}$/\n  phoneNumberValidationRegex = /^0\\d{8,10}$/\n\n  constructor(\n    private http: HttpClient,\n    private readonly cookieStorage: CookieService\n  ) {}\n\n  checkForSpecialCharacters(query: string) {\n    const pattern = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n    return pattern.test(query)\n  }\n\n  checkForDigits(query: string) {\n    const pattern = /\\d/;\n    return pattern.test(query)\n  }\n\n  checkForLowercase(query: string) {\n    const pattern = /[a-z]/;\n    return pattern.test(query)\n  }\n\n  checkForUppercase(query: string) {\n    const pattern = /[A-Z]/;\n    return pattern.test(query)\n  }\n\n  initializeApp(query: {params: string, url: string}): Observable<any> {\n    const queryObject = query;\n    this.queryObject = queryObject;\n    const appParams = queryObject['params'];\n    this.baseAPI = queryObject['url'];\n    if (!appParams) {\n      const error = {\n        title: 'App Params Missing',\n        message: 'No app params',\n        type: 'error',\n        queryObject: this.queryObject || {},\n      };\n      this.appSetupSubject.error(error);\n      return this.appSetupSubject.asObservable();\n    }\n    // const role = queryObject['role'];\n    this.cookieStorage.set('sso', this.baseAPI)\n    this.cookieStorage.set('appParams', appParams);\n    // this.cookieStorage.set('role', role);\n    return this.appInit();\n  }\n\n  private appInit(): Observable<any> {\n    this.http.post<AppParams>(`${this.baseAPI}/auth/get-token`, {}).subscribe({\n      next: (res) => {\n        if (res) {\n          this.setupApp(res);\n        }\n        const error = {\n          title: 'No res from api call',\n          message: 'Check backend app',\n          type: 'error',\n          queryObject: this.queryObject || {},\n        };\n        this.appSetupSubject.error(error);\n      },\n      error: (err) => {\n        const error = {\n          title: 'Api Error',\n          message: `Something went wrong, Please refresh the app`,\n          type: 'error',\n          queryObject: this.queryObject || {},\n        };\n        this.appSetupSubject.error(error);\n      },\n    });\n\n    return this.appSetupSubject.asObservable();\n  }\n\n  private setupApp(data: AppParams) {\n    // this.appIsSetup = true;\n    this.cookieStorage.remove('appParams');\n    this.cookieStorage.set(\n      'redirectUrl',\n      data.client.redirectUri,\n      data.expiresIn\n    );\n    this.cookieStorage.set('accessToken', data.accessToken, data.expiresIn);\n    this.cookieStorage.set('tokenType', data.tokenType, data.expiresIn);\n    this.appSetupSubject.next({\n      title: 'Success',\n      message: 'Items saved to cookies storage',\n      type: 'success',\n      queryObject: this.queryObject,\n    });\n  }\n\n  login(payload: { EmailAddress: string; Password: string }) {\n    // Todo: handle login\n    const encodedData = btoa(JSON.stringify(payload));\n\n    this.cookieStorage.remove('token')\n\n    let headers = new HttpHeaders();\n    headers = headers.append('Basic', encodedData);\n\n    this.http\n      .post<LoginData>(`${this.baseAPI}/auth/authenticate`, {}, { headers })\n      .subscribe({\n        next: (res: LoginData) => {\n          if (res['userId']) {\n            this.setUserDetails(res);\n            const userData =  (res as LoginData)\n            this.loginSubject.next(userData);\n          } else {\n            const errorMessage = res['description'];\n            this.loginSubject.next(errorMessage);\n          }\n        },\n        error: (err) => {\n          // scrollTo({ top: 0 });\n          this.loginSubject.next(err['description']);\n        },\n      });\n\n    return this.loginSubject.asObservable();\n  }\n\n  // setUserDetails(data: LoginData) {\n  private setUserDetails(data: any) {\n    for (const key in data) {\n      if (data[key]) {\n        if (typeof data[key] === 'object') {\n          this.cookieStorage.set(key, JSON.stringify(data[key]));\n        } else {\n          this.cookieStorage.set(key, data[key]);\n        }\n      }\n    }\n  }\n\n  signup(payload: any) {\n    this.http.post(`${this.baseAPI}/auth/register`, payload).subscribe({\n      next: (res: any) => {\n        if (res['data']) {\n          this.signUpSubject.next(res);\n        } else {\n          const errorMessage = res['description'];\n          this.signUpSubject.next(errorMessage);\n        }\n      },\n      error: (err: any) => {\n        // scrollTo({ top: 0 });\n        this.signUpSubject.next(err['description']);\n      },\n    });\n\n    return this.signUpSubject.asObservable();\n  }\n\n  verifyEmail(payload: { token: string; userId: string }) {\n    this.http.post(`${this.baseAPI}/auth/Confirm-Email`, payload).subscribe({\n      next: (res: any) => {\n        if (res['userId']) {\n          this.verifyEmailSubject.next(true);\n        } else {\n          const errorMessage = res['description'];\n          this.forgotPasswordSubject.next(errorMessage);\n        }\n      },\n      error: (err) => {\n        // scrollTo({ top: 0 });\n        this.forgotPasswordSubject.next(err['description']);\n      },\n    });\n\n    return this.verifyEmailSubject.asObservable();\n  }\n\n  sendOTP(OtpType: number) {\n    const userId = this.cookieStorage.get('userId');\n    if (userId) {\n      const payload = {\n        OtpType,\n        userId,\n      };\n      this.http\n        .post<HttpResponse<string>>(`${this.baseAPI}/otp/send-otp`, payload)\n        .subscribe({\n          next: (res: any) => {\n            // scrollTo({ top: 0 });\n            if (res['userId']) {\n              this.sendOTPSubject.next(true);\n            } else {\n              const errorMessage = res['description'];\n              this.sendOTPSubject.next(errorMessage);\n            }\n          },\n          error: (err) => {\n            // scrollTo({ top: 0 });\n            this.sendOTPSubject.next(err['description']);\n          },\n        });\n\n      return this.sendOTPSubject.asObservable();\n    }\n    this.sendOTPSubject.next(false);\n    return this.sendOTPSubject.asObservable();\n  }\n\n  validateOTP(token: string) {\n    const userId = this.cookieStorage.get('userId');\n\n    if (userId) {\n      const payload = {\n        token,\n        userId,\n      };\n      this.http\n        .post<LoginData>(`${this.baseAPI}/otp/validate-otp`, payload)\n        .subscribe({\n          next: (res) => {\n            // scrollTo({ top: 0 });\n            if (res['token']) {\n              this.setUserDetails(res);\n              this.validateOTPSubject.next(res);\n            } else {\n              const errorMessage = res['description'];\n              this.validateOTPSubject.next(errorMessage);\n            }\n          },\n          error: (err) => {\n            // scrollTo({ top: 0 });\n            this.validateOTPSubject.next(err['description']);\n          },\n        });\n\n      return this.validateOTPSubject.asObservable();\n    }\n\n    this.validateOTPSubject.next(false);\n    return this.validateOTPSubject.asObservable();\n  }\n\n  forgotPassword(emailAddress: string) {\n    const payload = {\n      emailAddress,\n    };\n    this.http\n      .post<HttpResponse<LoginData>>(\n        `${this.baseAPI}/auth/forgot-password`,\n        payload\n      )\n      .subscribe({\n        next: (res: any) => {\n          if (res['data']) {\n            this.setUserDetails(res.data);\n            this.forgotPasswordSubject.next(true);\n          } else {\n            const errorMessage = res['description'];\n            this.forgotPasswordSubject.next(errorMessage);\n          }\n        },\n        error: (err) => {\n          // scrollTo({ top: 0 });\n          this.forgotPasswordSubject.next(err['description']);\n        },\n      });\n\n    return this.forgotPasswordSubject.asObservable();\n  }\n\n  resetPassword(payload: {\n    password: string;\n    confirmPassword: string;\n    userId: string;\n  }) {\n    this.http\n      .post<LoginData>(`${this.baseAPI}/auth/reset-password`, payload)\n      .subscribe({\n        next: (res) => {\n          if (res['data'] === 'Password reset successful.') {\n            this.setUserDetails(res.data);\n            this.resetPasswordSubject.next(true);\n          } else {\n            // scrollTo({ top: 0 });\n            const errorMessage = res['description'];\n            this.resetPasswordSubject.next(errorMessage);\n          }\n        },\n        error: (err) => {\n          // scrollTo({ top: 0 });\n          this.resetPasswordSubject.next(err['description']);\n        },\n      });\n\n    return this.resetPasswordSubject.asObservable();\n  }\n\n  private get redirectURL() {\n    return this.cookieStorage.get('redirectUrl');\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lib-my-library',\n  template: `\n    <p>\n      my-library works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class MyLibraryComponent {\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable, catchError, tap, throwError } from 'rxjs';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  errorMessage: string = '';\n\n  constructor(\n    // private readonly notification: NotificationService\n  ) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    // TODO: show loading spinner as request starts here\n\n    return next.handle(request).pipe(\n      tap((evt) => {\n        if (evt instanceof HttpResponse) {\n          // TODO: if request is successful, hide spinners\n          if (evt.body.error == true) {\n            // TODO: if error is a frontend error, like network, notify user\n            // this.errorMessage = evt.body.message;\n            // this.notification.danger(this.errorMessage);\n          }\n        }\n      }),\n\n      catchError((error: HttpErrorResponse) => {\n        // TODO: if request fails, hide spinners\n\n        if (error.error instanceof ErrorEvent) {\n          //client-side error\n          this.errorMessage = `Error: ${error.error.message}`;\n        } else {\n          // server-side error\n\n          switch (error.status) {\n            case 503: {\n              this.errorMessage = 'Internal Server Error';\n              // this.notification.danger(this.errorMessage);\n              break;\n            }\n            case 500: {\n              this.errorMessage = 'Internal Server Error';\n              // this.notification.error(this.errorMessage, 'please try again later');\n              break;\n            }\n            case 400: {\n              const errorMessage = error.error.description;\n              throwError(() => new Error(errorMessage));\n              // this.notification.danger(errorMessage);\n              break;\n            }\n            case 404: {\n              // this.errorMessage = 'An Error Occurred, try again';\n              const errorMessage = error.error.description;\n              throwError(() => new Error(errorMessage));\n              // this.notification.danger(this.errorMessage);\n              break;\n            }\n            case 406: {\n              // this.errorMessage = 'An Error Occurred, try again';\n              const errorMessage = error.error['description'].split('.')[1] || error.error.description;\n              // throwError(() => new Error(errorMessage))\n              // this.notification.error(errorMessage, '');\n              break;\n            }\n            case 403: {\n              // this.notification.danger(\n              //   'Access Denied'\n              // );\n              // TODO: log user out and navigate to login page\n              // this.router.navigate(['/auth']);\n              break;\n            }\n            case 401: {\n              // this.notification.danger('Session Timed Out');\n              // TODO: log user out and navigate to login page\n              this.errorMessage = error.error.description || 'User not authorized';\n              // this.notification.error(this.errorMessage, '');\n              // this.router.navigate(['/auth']);\n              break;\n            }\n            case 405: {\n              this.errorMessage = 'Internal Server Error';\n              // this.notification.danger(this.errorMessage);\n              break;\n            }\n            case 0: {\n              this.errorMessage =\n                'Connection Error. Check Your Internet Connection';\n              // this.notification.danger(this.errorMessage);\n              break;\n            }\n          }\n        }\n\n        return throwError(error.error);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CookieService } from '../cookie.service';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(private cookieService: CookieService) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const ssoUrl = this.cookieService.get('sso') || '';\n    console.log(ssoUrl);\n    console.log('original request ==>', request);\n\n    if (request.url.includes(ssoUrl)) {\n      console.log('if request has sso url ==>', request);\n\n      if (request.url.includes('auth/get-token')) {\n        console.log('if request has auth/get-token ==>', request);\n        const accessToken = this.cookieService.get('appParams');\n        console.log('accessToken value ==>', accessToken);\n\n        if (accessToken) {\n        console.log('if appParams exist ==>', request);\n          request = request.clone({\n            setHeaders: {\n              Basic: `${accessToken}`,\n              // Accept: 'application/json',\n            },\n          });\n\n        console.log('after mods ==>', request);\n\n        }\n      } else if (\n        this.cookieService.get(this.cookieService.COOKIE_NAME) !== null\n      ) {\n        const accessToken = this.cookieService.get(\n          this.cookieService.COOKIE_NAME\n        );\n        const tokenType = this.cookieService.get('tokenType');\n        request.headers.delete('Authorization');\n        request = request.clone({\n          setHeaders: {\n            Authorization: `${tokenType} ${accessToken}`,\n            // Accept: 'application/json',\n          },\n        });\n      } else {\n        request = request.clone({\n          setHeaders: {\n            Authorization: '',\n            Basic: ``, // Clear the Authorization header if token is not available\n          },\n        });\n      }\n    }\n    return next.handle(request);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MyLibraryComponent } from './my-library.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\nimport { TokenInterceptor } from './interceptors/token.interceptor';\n\n\n\n@NgModule({\n  declarations: [\n    MyLibraryComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    MyLibraryComponent\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n  ],\n})\nexport class MyLibraryModule { }\n","/*\n * Public API Surface of my-library\n */\n\nexport * from './lib/my-library.service';\nexport * from './lib/my-library.component';\nexport * from './lib/my-library.module';\nexport * from './lib/interceptors/token.interceptor';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2.CookieService","i1.CookieService"],"mappings":"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"}