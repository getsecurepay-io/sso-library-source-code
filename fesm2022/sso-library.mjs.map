{"version":3,"file":"sso-library.mjs","sources":["../../../projects/my-library/src/lib/cookie.service.ts","../../../projects/my-library/src/lib/secure-auth.service.ts","../../../projects/my-library/src/public-api.ts","../../../projects/my-library/src/sso-library.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CookieService {\n  COOKIE_NAME = 'accessToken';\n\n  set(name: string, value: string, days?: number): void {\n    var expires = '';\n    if (days) {\n      var date = new Date();\n      date.setTime(date.getTime() + days * 1000);\n      expires = '; expires=' + date.toUTCString();\n    }\n    document.cookie = name + '=' + (value || '') + expires + '; path=/';\n  }\n\n  get(name: string): string | null {\n    var nameEQ = name + '=';\n    var ca = document.cookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  }\n\n  remove(name: string) {\n    this.set(name, '', -10000000000);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from './cookie.service';\nimport { AppParams, HttpResponse, LoginData } from './model';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SecureAuthService {\n  baseAPI = '';\n  private signUpSubject = new Subject();\n  private loginSubject = new Subject();\n  private appSetupSubject = new Subject();\n  private verifyEmailSubject = new Subject();\n  private sendOTPSubject = new Subject<boolean>();\n  private validateOTPSubject = new Subject();\n  private forgotPasswordSubject = new Subject<boolean>();\n  private resetPasswordSubject = new Subject<any>();\n  private queryObject: any;\n\n  emailValidationRegex =\n    /([-!#-'*+/-9=?A-Z^-~]+(\\.[-!#-'*+/-9=?A-Z^-~]+)*|\"([]!#-[^-~ \\t]|(\\\\[\\t -~]))+\")@[0-9A-Za-z]([0-9A-Za-z-]{0,61}[0-9A-Za-z])?(\\.[0-9A-Za-z]([0-9A-Za-z-]{0,61}[0-9A-Za-z])?)+/;\n  passwordValidationRegex =\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~])[A-Za-z\\d`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]{8,100000}$/;\n  phoneNumberValidationRegex = /^0\\d{8,10}$/;\n\n  constructor(\n    private http: HttpClient,\n    private readonly cookieStorage: CookieService\n  ) {}\n\n  checkForSpecialCharacters(query: string) {\n    const pattern = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n    return pattern.test(query);\n  }\n\n  checkForDigits(query: string) {\n    const pattern = /\\d/;\n    return pattern.test(query);\n  }\n\n  checkForLowercase(query: string) {\n    const pattern = /[a-z]/;\n    return pattern.test(query);\n  }\n\n  checkForUppercase(query: string) {\n    const pattern = /[A-Z]/;\n    return pattern.test(query);\n  }\n\n  private get headers(): HttpHeaders {\n    let headers = new HttpHeaders();\n    const accessToken = this.cookieStorage.get(this.cookieStorage.COOKIE_NAME);\n    const tokenType = this.cookieStorage.get('tokenType');\n    headers = headers.append('Authorization', `${tokenType} ${accessToken}`);\n\n    return headers;\n  }\n\n  initializeApp(query: { params: string; url: string }): Observable<any> {\n    const queryObject = query;\n    this.queryObject = queryObject;\n    const appParams = queryObject['params'];\n    this.baseAPI = queryObject['url'];\n    if (!appParams) {\n      const error = {\n        title: 'App Params Missing',\n        message: 'No app params',\n        type: 'error',\n        queryObject: this.queryObject || {},\n      };\n      this.appSetupSubject.error(error);\n      return this.appSetupSubject.asObservable();\n    }\n    // const role = queryObject['role'];\n    this.cookieStorage.set('sso', this.baseAPI);\n    this.cookieStorage.set('appParams', appParams);\n    // this.cookieStorage.set('role', role);\n    return this.appInit();\n  }\n\n  private appInit(): Observable<any> {\n    const accessToken = this.cookieStorage.get('appParams') || '';\n    let headers = new HttpHeaders();\n    headers = headers.append('Basic', accessToken);\n\n    this.http\n      .post<AppParams>(`${this.baseAPI}/auth/get-token`, {}, { headers })\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.setupApp(res);\n          }\n          const error = {\n            title: 'No res from api call',\n            message: 'Check backend app',\n            type: 'error',\n            queryObject: this.queryObject || {},\n          };\n          this.appSetupSubject.error(error);\n        },\n        error: (err) => {\n          const error = {\n            title: 'Api Error',\n            message: `Something went wrong, Please refresh the app`,\n            type: 'error',\n            queryObject: this.queryObject || {},\n          };\n          this.appSetupSubject.error(error);\n        },\n      });\n\n    return this.appSetupSubject.asObservable();\n  }\n\n  private setupApp(data: AppParams) {\n    // this.appIsSetup = true;\n    this.cookieStorage.remove('appParams');\n    this.cookieStorage.set(\n      'redirectUrl',\n      data.client.redirectUri,\n      data.expiresIn\n    );\n    this.cookieStorage.set('accessToken', data.accessToken, data.expiresIn);\n    this.cookieStorage.set('tokenType', data.tokenType, data.expiresIn);\n    this.appSetupSubject.next({\n      title: 'Success',\n      message: 'Items saved to cookies storage',\n      type: 'success',\n      queryObject: this.queryObject,\n    });\n  }\n\n  login(payload: { EmailAddress: string; Password: string }) {\n    // Todo: handle login\n    const encodedData = btoa(JSON.stringify(payload));\n    let headers = this.headers;\n    headers = headers.append('Basic', encodedData);\n\n    this.http\n      .post<LoginData>(`${this.baseAPI}/auth/authenticate`, {}, { headers })\n      .subscribe({\n        next: (res: LoginData) => {\n          if (res['userId']) {\n            this.setUserDetails(res);\n            const userData = res as LoginData;\n            this.loginSubject.next(userData);\n            this.loginSubject.complete();\n          } else {\n            const errorMessage = res?.description || 'Login failed';\n            this.loginSubject.error(errorMessage);\n            console.log('Login error res:', errorMessage);\n          }\n        },\n        error: (err) => {\n          console.log('Login error err:', err);\n          // scrollTo({ top: 0 });\n          this.loginSubject.error(err);\n          this.loginSubject.complete();\n        },\n      });\n\n    return this.loginSubject.asObservable();\n  }\n\n  // setUserDetails(data: LoginData) {\n  private setUserDetails(data: any) {\n    for (const key in data) {\n      if (data[key]) {\n        if (typeof data[key] === 'object') {\n          this.cookieStorage.set(key, JSON.stringify(data[key]));\n        } else {\n          this.cookieStorage.set(key, data[key]);\n        }\n      }\n    }\n  }\n\n  signup(payload: any) {\n    let headers = this.headers;\n    this.http\n      .post(`${this.baseAPI}/auth/register`, payload, { headers })\n      .subscribe({\n        next: (res: any) => {\n          if (res['data']) {\n            this.signUpSubject.next(res);\n          } else {\n            const errorMessage = res?.description || 'Failed';\n            this.signUpSubject.next(errorMessage);\n          }\n        },\n        error: (err: any) => {\n          // scrollTo({ top: 0 });\n          this.signUpSubject.next(err?.description || 'Failed');\n        },\n      });\n\n    return this.signUpSubject.asObservable();\n  }\n\n  verifyEmail(payload: { token: string; userId: string }) {\n    let headers = this.headers;\n\n    this.http\n      .post(`${this.baseAPI}/auth/Confirm-Email`, payload, { headers })\n      .subscribe({\n        next: (res: any) => {\n          if (res['userId']) {\n            this.verifyEmailSubject.next(true);\n          } else {\n            const errorMessage = res?.description || 'Failed';\n            this.forgotPasswordSubject.next(errorMessage);\n          }\n        },\n        error: (err) => {\n          // scrollTo({ top: 0 });\n          this.forgotPasswordSubject.next(err?.description || 'Failed');\n        },\n      });\n\n    return this.verifyEmailSubject.asObservable();\n  }\n\n  sendOTP(OtpType: number) {\n    let headers = this.headers;\n    const userId = this.cookieStorage.get('userId');\n    if (userId) {\n      const payload = {\n        OtpType,\n        userId,\n      };\n      this.http\n        .post<HttpResponse<string>>(`${this.baseAPI}/otp/send-otp`, payload, {\n          headers,\n        })\n        .subscribe({\n          next: (res: any) => {\n            // scrollTo({ top: 0 });\n            if (res['userId']) {\n              this.sendOTPSubject.next(true);\n            } else {\n              const errorMessage = res?.description || 'Failed';\n              this.sendOTPSubject.next(errorMessage);\n            }\n          },\n          error: (err) => {\n            // scrollTo({ top: 0 });\n            this.sendOTPSubject.next(err?.description || 'Failed');\n          },\n        });\n\n      return this.sendOTPSubject.asObservable();\n    }\n    this.sendOTPSubject.next(false);\n    return this.sendOTPSubject.asObservable();\n  }\n\n  validateOTP(token: string) {\n    const userId = this.cookieStorage.get('userId');\n\n    if (userId) {\n      const payload = {\n        token,\n        userId,\n      };\n      let headers = this.headers;\n      this.http\n        .post<LoginData>(`${this.baseAPI}/otp/validate-otp`, payload, {\n          headers,\n        })\n        .subscribe({\n          next: (res) => {\n            // scrollTo({ top: 0 });\n            if (res['token']) {\n              this.setUserDetails(res);\n              this.validateOTPSubject.next(res);\n            } else {\n              const errorMessage = res?.description || 'Failed';\n              this.validateOTPSubject.next(errorMessage);\n            }\n          },\n          error: (err) => {\n            // scrollTo({ top: 0 });\n            this.validateOTPSubject.next(err?.description || 'Failed');\n          },\n        });\n\n      return this.validateOTPSubject.asObservable();\n    }\n\n    this.validateOTPSubject.next(false);\n    return this.validateOTPSubject.asObservable();\n  }\n\n  forgotPassword(emailAddress: string) {\n    const payload = {\n      emailAddress,\n    };\n    let headers = this.headers;\n    this.http\n      .post<HttpResponse<LoginData>>(\n        `${this.baseAPI}/auth/forgot-password`,\n        payload,\n        { headers }\n      )\n      .subscribe({\n        next: (res: any) => {\n          if (res['data']) {\n            this.setUserDetails(res.data);\n            this.forgotPasswordSubject.next(true);\n          } else {\n            const errorMessage = res?.description || 'Failed';\n            this.forgotPasswordSubject.next(errorMessage);\n          }\n        },\n        error: (err) => {\n          // scrollTo({ top: 0 });\n          this.forgotPasswordSubject.next(err?.description || 'Failed');\n        },\n      });\n\n    return this.forgotPasswordSubject.asObservable();\n  }\n\n  resetPassword(payload: {\n    password: string;\n    confirmPassword: string;\n    userId: string;\n  }) {\n    let headers = this.headers;\n    this.http\n      .post<LoginData>(`${this.baseAPI}/auth/reset-password`, payload, {\n        headers,\n      })\n      .subscribe({\n        next: (res) => {\n          if (res['data'] === 'Password reset successful.') {\n            this.setUserDetails(res.data);\n            this.resetPasswordSubject.next(true);\n          } else {\n            // scrollTo({ top: 0 });\n            const errorMessage = res?.description || 'Failed';\n            this.resetPasswordSubject.next(errorMessage);\n          }\n        },\n        error: (err) => {\n          // scrollTo({ top: 0 });\n          this.resetPasswordSubject.next(err?.description || 'Failed');\n        },\n      });\n\n    return this.resetPasswordSubject.asObservable();\n  }\n}\n","/*\n * Public API Surface of my-library\n */\n\nexport * from './lib/secure-auth.service';\n// export * from './lib/sso-auth.service';\n// export * from './lib/my-library.module';\n// export * from './lib/interceptors/token.interceptor';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2.CookieService"],"mappings":"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"}